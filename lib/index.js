(()=>{"use strict";var e={850:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FreeeAPIClient=void 0;const s=a(305);t.FreeeAPIClient=class{constructor(e,t){this.tokenManager=e,this.axios=t}get(e,t,a,s){return this.tokenManager.get(a).then((a=>{const r=Object.assign({Authorization:`Bearer ${a}`,"X-Api-Version":"2020-06-15","Content-Type":"application/json"},s);return this.axios.get(e,{params:t,headers:r})}))}post(e,t,a,r){return this.tokenManager.get(a).then((a=>{let i=t,o={},n="application/json";if("api/1/receipts"===e){const e=new s;Object.keys(t).forEach((a=>{e.append(a,t[a])})),i=e,o=e.getHeaders(),n="multipart/form-data"}o.Authorization=`Bearer ${a}`,o["X-Api-Version"]="2020-06-15",o["Content-Type"]=n;const c=Object.assign(Object.assign({},o),r);return this.axios.post(e,i,{maxContentLength:104857600,headers:c})}))}put(e,t,a,s){return this.tokenManager.get(a).then((a=>{const r=Object.assign({Authorization:`Bearer ${a}`,"X-Api-Version":"2020-06-15","Content-Type":"application/json"},s);return this.axios.put(e,t,{headers:r})}))}delete(e,t,a,s){return this.tokenManager.get(a).then((a=>{const r=Object.assign({Authorization:`Bearer ${a}`,"X-Api-Version":"2020-06-15","Content-Type":"application/json"},s);return this.axios.delete(e,{data:t,headers:r})}))}}},894:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FreeeFirebaseAuthClient=void 0;const s=a(786);t.FreeeFirebaseAuthClient=class{constructor(e,t,a,r,i){this.admin=e,this.oauth2=t,this.axios=a,this.tokenManager=r;const o=i.freee,n=s.ConfigManager.getFunctionsConfigs();this.clientId=n.freee.client_id,this.clientSecret=n.freee.client_secret,this.redirectPath=s.ConfigManager.get(o,s.ConfigKeys.redirectPath),this.callbackPath=s.ConfigManager.get(o,s.ConfigKeys.callbackPath),this.companiesPath=s.ConfigManager.get(o,s.ConfigKeys.companiesPath),this.homePath=s.ConfigManager.get(o,s.ConfigKeys.homePath),this.appHost=s.ConfigManager.get(o,s.ConfigKeys.appHost),this.authHost=s.ConfigManager.get(o,s.ConfigKeys.authHost),this.apiKey=i.firebase&&i.firebase.apiKey}redirect(e){const t=this.oauth2.authorizationCode.authorizeURL({redirect_uri:`${this.authHost}${this.getCallbackPath()}`});e.redirect(t)}async callback(e,t){try{const a=await this.oauth2.authorizationCode.getToken({client_id:this.clientId,client_secret:this.clientSecret,code:e,redirect_uri:`${this.authHost}${this.getCallbackPath()}`}),s={accessToken:a.access_token,refreshToken:a.refresh_token,expiresIn:a.expires_in,createdAt:a.created_at},r=await this.getFreeeUser(s.accessToken),i=r.data.user.id,o=r.data.user.email,n=r.data.user.display_name?r.data.user.display_name:"",c=await this.createFirebaseAccount(i,o,n,s);t.redirect(`${this.appHost}${this.homePath}?token=${c}`)}catch(e){console.error("Some error occured on login process:",e),t.send(this.signInRefusedTemplate())}}getRedirectPath(){return this.redirectPath}getCallbackPath(){return this.callbackPath}getCompaniesPath(){return this.companiesPath}async createCryptoKey(e){await this.tokenManager.createCryptoKey(e)}getFreeeUser(e){return this.axios.get("/api/1/users/me?companies=true",{headers:{Authorization:`Bearer ${e}`}})}async createFirebaseAccount(e,t,a,s){const r=e.toString();return await this.tokenManager.save(r,t,s),await this.admin.auth().updateUser(r,{email:t,displayName:a}).catch((async e=>{if("auth/user-not-found"===e.code)return await this.admin.auth().createUser({uid:r,email:t,displayName:a});throw e})),await this.admin.auth().createCustomToken(r)}signInRefusedTemplate(){return`\n      <script>\n        window.location.href = '${this.appHost}'\n      <\/script>`}}},313:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=a(938),r=a(675),i=a(850),o=a(894),n=a(786),c=a(745),h=a(791);t.default=class{constructor(e,t){const u=e.freee;this.admin=t?r.initializeApp({credential:r.credential.cert(t),databaseURL:`https://${t.project_id}.firebaseio.com`,storageBucket:`${t.project_id}.appspot.com`}):r.initializeApp();const p=n.ConfigManager.get(e.firebase,n.ConfigKeys.cryptoKeyBucket),l=p?new c.default(this.admin.storage().bucket(p)):null,d=a(886).create(this.getCredentials(u)),f=new h.TokenManager(this.admin,d,l);s.default.defaults.baseURL=n.ConfigManager.get(u,n.ConfigKeys.apiHost),this.apiClient=new i.FreeeAPIClient(f,s.default),this.firebaseAuthClient=new o.FreeeFirebaseAuthClient(this.admin,d,s.default,f,e)}firebaseApp(){return this.admin}api(){return this.apiClient}auth(){return this.firebaseAuthClient}getCredentials(e){const t=n.ConfigManager.getFunctionsConfigs().freee;return{client:{id:t.client_id,secret:t.client_secret},auth:{tokenHost:n.ConfigManager.get(e,n.ConfigKeys.tokenHost),authorizePath:n.ConfigManager.get(e,n.ConfigKeys.authorizePath),tokenPath:n.ConfigManager.get(e,n.ConfigKeys.tokenPath)}}}}},786:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigManager=t.ConfigKeys=void 0;const s=a(701),r=a(702);(0,a(818).config)();const i=s.SUPPORTED_REGIONS,o=JSON.parse(process.env.FIREBASE_CONFIG).projectId;let n;const c=i.map((e=>e));n=process.env.ENV_REGION&&c.includes(process.env.ENV_REGION)?process.env.ENV_REGION:"asia-northeast1";const h=process.env.ENV_MODE||"production",u=process.env.FREEE_CLIENT_ID||"",p=process.env.FREEE_CLIENT_SECRET||"";var l;!function(e){e.apiHost="apiHost",e.appHost="appHost",e.authHost="authHost",e.redirectPath="redirectPath",e.callbackPath="callbackPath",e.companiesPath="companiesPath",e.homePath="homePath",e.tokenHost="tokenHost",e.authorizePath="authorizePath",e.tokenPath="tokenPath",e.cryptoKeyBucket="cryptoKeyBucket"}(l||(t.ConfigKeys=l={}));const d={freee:[{key:l.apiHost,default:"https://api.freee.co.jp",production:"https://api.freee.co.jp"},{key:l.appHost,default:"http://localhost:5000",production:`https://${o}.web.app`},{key:l.authHost,default:`http://localhost:5001/${o}/${n}/api/auth`,production:`https://${n}-${o}.cloudfunctions.net/api/auth`},{key:l.redirectPath,default:"/redirect"},{key:l.callbackPath,default:"/callback"},{key:l.companiesPath,default:"/companies"},{key:l.homePath,default:"/"},{key:l.tokenHost,default:"https://accounts.secure.freee.co.jp",production:"https://accounts.secure.freee.co.jp"},{key:l.authorizePath,default:"/public_api/authorize"},{key:l.tokenPath,default:"/public_api/token"}],firebase:[{key:l.cryptoKeyBucket,default:`${o}.appspot.com`}]};t.ConfigManager=class{static get(e,t){return e&&this.hasKey(e,t)?e[t]:this.getDefaultValue(t)}static getFunctionsConfigs(){return u&&p||(0,r.error)("Freee client id or client secret was not get successfully, please check the secret keys"),{env:{mode:h,region:n},freee:{client_id:u||"",client_secret:p||""}}}static getDefaultValue(e){const t=[].concat(d.freee).concat(d.firebase).find((t=>t.key===e));return this.isProduction()&&t.production?t.production:t.default}static isProduction(){const e=this.getFunctionsConfigs();return e.env&&"production"===e.env.mode}static hasKey(e,t){return Object.keys(e).find((e=>e===t))}}},745:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=a(172),r=a(749),i="aes-256-cbc",o="base64",n="utf8";t.default=class{constructor(e){this.bucket=e,this.keyCache={}}async createCryptoKey(e){const t=(0,s.format)(e,"yyyyMM");return this.create(t)}async encrypt(e){const{accessToken:t,refreshToken:a}=e,c=(0,s.format)(new Date,"yyyyMM"),h=await this.getKey(c),u=r.randomBytes(16);return Object.assign(Object.assign({},e),{accessToken:this.crypt(t,this.cipher(h,u),n,o),refreshToken:this.crypt(a,this.cipher(h,u),n,o),keyFileName:c,algorithm:i,iv:u})}async decrypt(e){const{accessToken:t,refreshToken:a,keyFileName:s,algorithm:r,iv:i}=e,c=await this.getKey(s);return Object.assign(Object.assign({},e),{accessToken:this.crypt(t,this.decipher(r,c,i),o,n),refreshToken:this.crypt(a,this.decipher(r,c,i),o,n)})}cipher(e,t){return r.createCipheriv(i,e,t)}decipher(e,t,a){return r.createDecipheriv(e,t,a)}async getKey(e){if(this.keyCache[e])return this.keyCache[e];try{return await this.get(e)}catch(t){return await this.exists(e)||(console.info("No key file for:",e),await this.create(e)),await this.get(e)}}crypt(e,t,a,s){let r=t.update(e,a,s);return r+=t.final(s),r}async create(e){const t=r.randomBytes(32),a=this.bucket.file(e);await a.save(t),console.log("New crypto key is successfully created for:",e)}async get(e){const t=await this.bucket.file(e).download();return this.keyCache[e]=t[0],console.log("Crypto key is retrieved from storage for:",e),t[0]}async exists(e){const t=(await this.bucket.file(e).exists())[0];return console.log(`Crypto key ${t?"is":"is not"} exists storage for:`,e),t}}},791:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TokenManager=void 0,t.TokenManager=class{constructor(e,t,a){this.admin=e,this.oauth2=t,this.cryptor=a,this.tokenCache={}}async get(e){const t=await this.getTokenFromFirebase(e);if(!this.tokenExpired(t))return t.accessToken;console.log("accessToken has been expired for user:",e);try{return await this.refreshToken(t,e)}catch(t){if(t.output&&401===t.output.statusCode){console.log("Token is already refreshed in other instance:",t);const a=await this.getTokenFromFirebase(e,!0);if(this.tokenExpired(a))throw console.error("Can not get available token:",t),t;return a.accessToken}throw t}}async save(e,t,a){const s=await this.encrypt(a);await this.admin.firestore().doc(`/freeeTokens/${e}`).set(Object.assign(Object.assign({},s),{email:t}))}async createCryptoKey(e){this.cryptor&&await this.cryptor.createCryptoKey(e)}async refreshToken(e,t){const a={access_token:e.accessToken,refresh_token:e.refreshToken,expires_in:e.expiresIn},s=this.oauth2.accessToken.create(a),r=await s.refresh(),i=await this.encrypt({accessToken:r.token.access_token,refreshToken:r.token.refresh_token,expiresIn:r.token.expires_in,createdAt:r.token.created_at});return this.tokenCache[t]=i,await this.admin.firestore().doc(`/freeeTokens/${t}`).set(Object.assign({},i),{merge:!0}),console.log("accessToken is successfully refreshed for user:",t),r.token.access_token}tokenExpired(e){const t=e.createdAt+e.expiresIn-300;return(new Date).getTime()/1e3>=t}async getTokenFromFirebase(e,t){if(!t){const t=this.tokenCache[e];if(t)return await this.decrypt(t)}const a=(await this.admin.firestore().doc(`/freeeTokens/${e}`).get()).data();return this.tokenCache[e]=a,console.log("Token is retrieved from firestore for user:",e),await this.decrypt(a)}async encrypt(e){return this.cryptor?await this.cryptor.encrypt(e):e}async decrypt(e){return this.cryptor?await this.cryptor.decrypt(e):e}}},938:e=>{e.exports=require("axios")},749:e=>{e.exports=require("crypto")},172:e=>{e.exports=require("date-fns")},818:e=>{e.exports=require("dotenv")},675:e=>{e.exports=require("firebase-admin")},701:e=>{e.exports=require("firebase-functions")},702:e=>{e.exports=require("firebase-functions/logger")},305:e=>{e.exports=require("form-data")},886:e=>{e.exports=require("simple-oauth2")}},t={};function a(s){var r=t[s];if(void 0!==r)return r.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,a),i.exports}var s={};for(var r in(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.FreeeServerSDK=void 0;const t=a(313);e.FreeeServerSDK=t.default})(),s)this[r]=s[r];s.__esModule&&Object.defineProperty(this,"__esModule",{value:!0})})();